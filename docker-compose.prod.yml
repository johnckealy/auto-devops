
version: "3.5"

# External network
networks:
    web:
        external: true

volumes:
    postgres_data:


services:
    # CaddyServer reverse proxy
    caddy:
        restart: always
        image: caddy:2-alpine
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ${ROOT_FOLDER}/caddy/Caddyfile:/etc/caddy/Caddyfile
        environment:
            - API_URL=${API_URL}
            - ORIGIN_URL=${ORIGIN_URL}
            - LETS_ENCRYPT_ENDPOINT=${LETS_ENCRYPT_ENDPOINT}
            - LETS_ENCRYPT_EMAIL=${LETS_ENCRYPT_EMAIL}
        networks:
            - web

    # Django web app
    django:
        restart: always
        build:
            context: ${ROOT_FOLDER}/api
            dockerfile: ${ROOT_FOLDER}/api/Dockerfile
        expose:
            - 8000
        environment:
            - url=${API_URL}
        command:
            "gunicorn config.wsgi:application --bind 0.0.0.0:8000"
        env_file:
            - ${ROOT_FOLDER}/env/.env.${ENVIRONMENT}
        depends_on:
            - db
        networks:
            - web


    # Django database
    db:
        restart: always
        image: postgres:12.0-alpine
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file:
            - ${ROOT_FOLDER}/env/.env.db
        networks:
            - web

    # Nuxt frontend app
    quasar:
        build: ${ROOT_FOLDER}/frontend/
        ports:
            - "3000:3000"
        environment:
            - url=${ORIGIN_URL}
        volumes:
            - ./frontend:/var/lib/frontend
        command:
            bash -c "cd dist/ssr/ && npm run start"
        env_file:
            - ./env/.env.${ENVIRONMENT}
        networks:
            - web